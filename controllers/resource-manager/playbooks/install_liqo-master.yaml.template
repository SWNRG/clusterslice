---
- hosts: {@node_name@}
  gather_facts: no
  vars:
    admin_username: {@admin_username@}
    node_name: {@node_name@}
    node_ip: {@node_ip@}
    app_name: {@app_name@}
    app_version: {@app_version@}
    app_waitforfile: {@app_waitforfile@}
    clusterslice_name: {@clusterslice_name@}
    peers: {@peers@}
    ansible_shell_type: sh
    ansible_terminal_type: dumb

  tasks:
     - name: installing liqo cli
       become: yes
       become_user: "{{ admin_username }}"
       shell: |
               sudo curl --fail -LS "https://github.com/liqotech/liqo/releases/download/v0.8.3/liqoctl-linux-amd64.tar.gz" | sudo tar -xz
               sudo install -o root -g root -m 0755 liqoctl /usr/local/bin/liqoctl

     - name: installing liqo 
       become: yes
       become_user: "{{ admin_username }}"
       shell: |
               liqoctl install kubeadm

     - name: Update liqo services to use NodePort
       become: yes
       become_user: "{{ admin_username }}"
       shell: |
               kubectl -n liqo patch service/liqo-auth --patch "{\"spec\":{\"type\":\"NodePort\"}}" --type merge
               kubectl -n liqo patch service/liqo-gateway --patch "{\"spec\":{\"type\":\"NodePort\"}}" --type merge

     - name: Retrieving liqoctl status
       become: yes
       become_user: "{{ admin_username }}"
       shell: |
               liqoctl status
       register: liqo_status_output

     - name: Show liqo status
       debug: var=liqo_status_output


     - name: wait for all peer-join.sh files to appear
       delegate_to: localhost
       shell: |
               files_missing=0
               for peer in {{ peers }}; do
                 if [ ! -f "/opt/clusterslice/shared/${peer}-peer-join.sh" ]; then
                   files_missing=$((files_missing + 1))
                 fi
               done
               echo "files missing $files_missing"
               exit $files_missing
       register: filecheck
       until: filecheck.rc == 0
       retries: 150
       delay: 10

     - name: Upload shared files to remote host
       become: yes
       ansible.builtin.copy:
         src: /opt/clusterslice/shared/
         dest: /opt/clusterslice/shared/
         owner: '{{ admin_username }}'
         group: '{{ admin_username }}'
         mode: '0554'

     - name: join pending peers
       become: yes
       become_user: "{{ admin_username }}"
       shell: |
               echo "joining peers"
               for peer in {{ peers }}; do
                 echo "joining peer ${peer}"
                 /opt/clusterslice/shared/${peer}-peer-join.sh
               done
       register: peersjoined

     - debug:
         msg: "{{ peersjoined.stdout }}"
